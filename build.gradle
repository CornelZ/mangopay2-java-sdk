buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.21.0"
    }
}

apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'io.codearte.nexus-staging'

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.slf4j:slf4j-api:1.7.7'
    compile 'com.google.code.gson:gson:2.2.4'
    compile 'commons-codec:commons-codec:1.8'

    testCompile 'junit:junit:4.12'
    testCompile 'org.slf4j:slf4j-simple:1.7.7'
}

test {
    exclude 'com/mangopay/core/BankingAliasApiImplTest.class'
    systemProperty "https.protocols", "TLSv1.2,TLSv1.1,TLSv1"
    testLogging {
        events "failed"
        exceptionFormat "full"
        showStackTraces true
    }
}

task sourceJar(type: Jar) {
    classifier "sources"
    from sourceSets.main.allJava
}


artifacts {
    archives jar
}

group = 'com.mangopay'
version = '2.8.0'
sourceCompatibility = '1.8'

if (project.hasProperty('signing.keyId')) {
    apply plugin: 'signing'
    signing {
        sign configurations.archives
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            customizePom(pom)
            groupId 'com.mangopay'
            artifactId 'mangopay2-java-sdk'
            version '2.8.0'

            from components.java

            // create the sign pom artifact
            pom.withXml {
                def pomFile = file("${project.buildDir}/generated-pom.xml")
                writeTo(pomFile)
                def pomAscFile = signing.sign(pomFile).signatureFiles[0]
                artifact(pomAscFile) {
                    classifier = null
                    extension = 'pom.asc'
                }
            }

            artifact(sourceJar) {
                classifier = 'sources'
            }

            if (project.hasProperty('signing.keyId')) {
                // create the signed artifacts
                project.tasks.signArchives.signatureFiles.each {
                    artifact(it) {
                        def matcher = it.file =~ /-(sources)\.jar\.asc$/
                        if (matcher.find()) {
                            classifier = matcher.group(1)
                        } else {
                            classifier = null
                        }
                        extension = 'jar.asc'
                    }
                }
            }
        }
    }
    repositories {
        maven {
            url 'https://oss.sonatype.org/service/local/staging/deploy/maven2'
            credentials {
                username System.getenv('SONATYPE_USERNAME')
                password System.getenv('SONATYPE_PASSWORD')
            }
        }
    }
}

tasks.withType(Javadoc) {
    options.addStringOption('encoding', 'UTF-8')
    options.addStringOption('charSet', 'UTF-8')
}

nexusStaging {
    packageGroup = "com.mangopay" // optional if packageGroup == project.getGroup()
    stagingProfileId = "2be9f53d7db009" // when not defined will be got from server using "packageGroup"
    username = System.getenv('SONATYPE_USERNAME')
    password = System.getenv('SONATYPE_PASSWORD')
    delayBetweenRetriesInMillis = 10000
}

def customizePom(pom) {
    pom.withXml {
        def root = asNode()

        // eliminate test-scoped dependencies (no need in maven central POMs)
        root.dependencies.removeAll { dep ->
            dep.scope == "test"
        }

        // add all items necessary for maven central publication
        root.children().last() + {
            resolveStrategy = Closure.DELEGATE_FIRST

            description 'Java SDK for Mangopay'
            name 'mangopay2-java-sdk'
            url 'https://github.com/Mangopay/mangopay2-java-sdk'
            organization {
                name 'Codegile'
                url 'https://www.codegile.com'
            }
            licenses {
                license {
                    name 'MIT License'
                    url 'http://www.opensource.org/licenses/mit-license.php'
                    distribution 'repo'
                }
            }
            scm {
                url 'git@github.com:mangopay/mangopay2-java-sdk.git'
                connection 'scm:git:git@github.com:mangopay/mangopay2-java-sdk.git'
                developerConnection 'scm:git:git@github.com:mangopay/mangopay2-java-sdk.git'
            }

            developers {
                developer {
                    id 'cata.craciun'
                    name 'Catalin Craciun'
                    email 'catalin.craciun@codegile.com'
                }
            }
        }
    }
}

model {
    tasks.generatePomFileForMavenJavaPublication {
        destination = file("$buildDir/generated-pom.xml")
    }
    tasks.publishMavenJavaPublicationToMavenLocal {
        dependsOn project.tasks.signArchives
    }
    tasks.publishMavenJavaPublicationToMavenRepository {
        dependsOn project.tasks.signArchives
    }
}


task updatePropertiesFile {
    doLast {
        logger.quiet('Update Mangopay Properties File')
        def propertyFile = file "src/main/resources/com/mangopay/core/mangopay.properties"
        def props = new Properties()
        propertyFile.withReader { props.load(it) }
        props.setProperty("version", (String) version)
        propertyFile.withWriter { props.store(it, null) }
    }
}

processResources.dependsOn updatePropertiesFile
